let username = "";
let moods = [];
let chart;

const thoughts = {
  "ðŸ˜Š": "Keep smiling! Today is a great day.",
  "ðŸ˜”": "It's okay to feel sad. Be kind to yourself.",
  "ðŸ˜¡": "Take a deep breath. Let your anger go.",
  "ðŸ˜Œ": "Stay relaxed and enjoy your peace.",
  "ðŸ˜«": "Remember to take breaks and breathe.",
  "ðŸ˜•": "Try to focus on one thing at a time."
};

const assistance = {
  "ðŸ˜Š": [
    "That's amazing! ðŸ˜Š",
    "Keep spreading those good vibes.",
    "Remember to share your joy with others!",
    "Youâ€™re doing greatâ€”keep going!",
    "Take time to celebrate your achievements.",
    "Stay grateful for the little things."
  ],
  "ðŸ˜”": [
    "I'm here for you. ðŸ˜”",
    "Itâ€™s okay to feel down sometimes.",
    "Try listening to calming music or taking a walk.",
    "Talking to a friend can help lift your spirits.",
    "Focus on small things that bring you peace.",
    "Take deep breaths and give yourself a break."
  ],
  "ðŸ˜¡": [
    "Anger is a valid emotion. ðŸ˜¡",
    "Try to express your feelings constructively.",
    "Take a breakâ€”maybe some deep breathing or a walk.",
    "Write down what's bothering you to process it.",
    "Stay mindful of your triggers and responses.",
    "You are in controlâ€”even when emotions run high."
  ],
  "ðŸ˜Œ": [
    "Ah, calm and peaceful. ðŸ˜Œ",
    "Enjoy this serene stateâ€”youâ€™ve earned it!",
    "Take some time to reflect or meditate.",
    "Read a book or engage in something you love.",
    "Let this relaxation recharge your energy.",
    "Cherish the peace youâ€™re feeling now."
  ],
  "ðŸ˜«": [
    "Youâ€™re feeling stressed. ðŸ˜«",
    "Remember to breatheâ€”slowly and deeply.",
    "Break your tasks into smaller steps.",
    "Take a short walk to refresh your mind.",
    "Make time for self-care today.",
    "It's okay to ask for help when needed."
  ],
  "ðŸ˜•": [
    "Feeling confused is natural. ðŸ˜•",
    "Pause, reflect, and try to organize your thoughts.",
    "Journaling might help clarify your feelings.",
    "Talk to someone you trust about your thoughts.",
    "Avoid overthinkingâ€”focus on what you can control.",
    "Clarity often comes with time and patience."
  ]
};

const moodColors = {
  "ðŸ˜Š": "#d4f8e8",
  "ðŸ˜”": "#dce6f1",
  "ðŸ˜¡": "#fddede",
  "ðŸ˜Œ": "#e4f7f5",
  "ðŸ˜«": "#fbe4d8",
  "ðŸ˜•": "#e9e4f0"
};

function login() {
  username = document.getElementById("usernameInput").value.trim();
  if (!username) return alert("Enter a valid username!");

  localStorage.setItem("moodUsername", username);
  localStorage.setItem("moodData", JSON.stringify(moods));

  document.getElementById("loginScreen").classList.add("hidden");
  document.getElementById("mainApp").classList.remove("hidden");
  document.getElementById("greeting").textContent = `Welcome, ${username}`;
  renderChart();
  updateChart(); 
}

function logMood(mood) {
  moods.push({ mood, date: new Date().toLocaleDateString() });
  localStorage.setItem("moodData", JSON.stringify(moods));
  updateUI(mood);
  updateChart();
}

function logout() {
  
  document.getElementById("loginScreen").classList.remove("hidden");
  document.getElementById("mainApp").classList.add("hidden");
  document.getElementById("usernameInput").value = "";
}

function updateUI(mood) {
  document.getElementById("thoughtBox").textContent = thoughts[mood];

  const tips = assistance[mood];
  const assistanceBox = document.getElementById("assistanceBox");
  assistanceBox.innerHTML = tips.map(tip => `<p>${tip}</p>`).join('');

  document.body.style.backgroundColor = moodColors[mood] || "#ffffff";
}

function renderChart() {
  const ctx = document.getElementById('moodChart').getContext('2d');
  chart = new Chart(ctx, {
    type: 'line',
    data: {
      labels: [],
      datasets: [{
        label: 'Mood Over Time',
        data: [],
        backgroundColor: 'rgba(0, 140, 255, 0.2)',
        borderColor: 'rgba(0, 140, 255, 1)',
        tension: 0.4,
        fill: true,
        pointRadius: 5
      }]
    },
    options: {
      scales: {
        y: {
          suggestedMin: 0,
          suggestedMax: 10
        }
      }
    }
  });
}

function updateChart() {
  chart.data.labels = moods.map((m, i) => m.date + " #" + (i + 1));
  chart.data.datasets[0].data = moods.map(m => moodToValue(m.mood));
  chart.update();
}

function moodToValue(mood) {
  switch (mood) {
    case "ðŸ˜Š": return 9;
    case "ðŸ˜Œ": return 8;
    case "ðŸ˜•": return 5;
    case "ðŸ˜”": return 4;
    case "ðŸ˜«": return 3;
    case "ðŸ˜¡": return 2;
    default: return 5;
  }
}
let darkMode = false;

function toggleDarkMode() {
  darkMode = !darkMode;
  document.body.classList.toggle('dark-mode', darkMode);
}
window.onload = function () {
  const savedUsername = localStorage.getItem("moodUsername");
  const savedMoods = localStorage.getItem("moodData");

  if (savedUsername && savedMoods) {
    username = savedUsername;
    moods = JSON.parse(savedMoods);

    document.getElementById("loginScreen").classList.add("hidden");
    document.getElementById("mainApp").classList.remove("hidden");
    document.getElementById("greeting").textContent = `Welcome, ${username}`;
    renderChart();
    updateChart();
  }
};

